<?xml version="1.0" encoding="utf-8"?>
<ext:CustomPanel xmlns:mx="http://www.adobe.com/2006/mxml"
			   xmlns:ext="renderers.*"
		  	   layout="vertical" 
		  	   width="820" 
		  	   height="440" 
		  	   title="Implications" 
		  	   horizontalAlign="center"
			   showControls="true" 
			   enableResize="true">
<mx:Script>
<![CDATA[
	import mx.collections.ArrayCollection;
	import mx.graphics.ImageSnapshot;
	import mx.graphics.codec.JPEGEncoder;
	import mx.graphics.codec.PNGEncoder;
	import mx.managers.PopUpManager;
	
	import renderers.CustomPanel;

	[Bindable]
	public var implItems:ArrayCollection = new ArrayCollection();
	
	public function setImplItems(items: ArrayCollection): void
	{
		for each (var o: Object in items)
		{
			implItems.addItem(o);
		}
	}
	
	private function exportImplications(): void
	{	
		var panel:ImplicationsSavePanel = new ImplicationsSavePanel();
		panel.title="Save implications as image";
		PopUpManager.addPopUp(panel, this, true);
		PopUpManager.centerPopUp(panel);
		implGrid.height=implGrid.measureHeightOfItems(0, implGrid.dataProvider.length+1) + implGrid.headerHeight;
		var cWidth:int=0;
		for (var c:int=0;c<implGrid.columnCount;c++)
			cWidth+=implGrid.columns[c].width;
		implGrid.width=cWidth;//contable.columns[1].width;
		var bd:BitmapData = new BitmapData(implGrid.width, implGrid.height);
		var fr:FileReference = new FileReference();
		var jpgEnc:JPEGEncoder = new JPEGEncoder(100);
		var pngEnc:PNGEncoder = new PNGEncoder();
		
		panel.dataButton.addEventListener(MouseEvent.CLICK,
			function (event:Event): void {
				var out:ByteArray = new ByteArray();
				for (var i:int=0;i<implItems.length;i++) {
					out.writeUTFBytes(implItems.list.getItemAt(i).premise+"->"+implItems.list.getItemAt(i).conclusion+"\n");
				}
				fr.save(out, "implications.txt");
				implGrid.percentWidth=100;
				implGrid.percentHeight=100;
				PopUpManager.removePopUp(panel);
			});
		
		panel.jpgButton.addEventListener(MouseEvent.CLICK,
			function (event:Event): void {
				bd.draw(implGrid);
				var ba:ByteArray = jpgEnc.encode(bd);
				fr.save(ba, "implications.jpg");
				implGrid.percentWidth=100;
				implGrid.percentHeight=100;
				PopUpManager.removePopUp(panel);
			});
		
		panel.pngButton.addEventListener(MouseEvent.CLICK,
			function (event:Event): void {
				bd.draw(implGrid);
				var ba:ByteArray = pngEnc.encode(bd);
				fr.save(ba, "implications.png");
				implGrid.percentWidth=100;
				implGrid.percentHeight=100;
				PopUpManager.removePopUp(panel);
			});
		
		panel.cButton.addEventListener(MouseEvent.CLICK,
			function (event:Event): void {
				implGrid.percentWidth=100;
				implGrid.percentHeight=100;
				PopUpManager.removePopUp(panel);
			});
	}
]]>
</mx:Script>
	<mx:DataGrid lockedColumnCount="1" id="implGrid"
					     horizontalScrollPolicy="auto"
					     verticalScrollPolicy="auto"
					     variableRowHeight="true"
					     width="100%" height="100%"
						 dataProvider="{implItems}" editable="false">
		<mx:columns>
            <mx:DataGridColumn dataField="premise" headerText="Premise" width="400"/>
            <mx:DataGridColumn dataField="conclusion" headerText="Conclusion"/>
        </mx:columns>
	</mx:DataGrid>
	<mx:ControlBar horizontalAlign="right">
		<mx:Button id="saveImplicationsAsImageButton" visible="true" label="Save" click="exportImplications()"/>
		<mx:Button id="cButton" label="Close"/>
	</mx:ControlBar>
</ext:CustomPanel>
